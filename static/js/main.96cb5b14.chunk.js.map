{"version":3,"sources":["api.js","components/TypeList/index.js","components/PokemonGrid/index.js","views/Home/index.js","components/PokemonInfoCard/index.js","views/Pokemon/index.js","views/Type/index.js","views/About/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","TypeList","history","useHistory","useState","types","setTypes","loading","setLoading","useEffect","a","get","res","data","fetchTypes","type","color","height","width","className","map","key","name","onClick","push","viewType","PokemonGrid","props","pokemons","setPokemons","kanto_pokemons","fetchPokemons","pokemon","id","alt","src","front","Home","PokemonInfoCard","setPokemon","fetchPokemon","poke_id","weight","sprites","back","front_shiny","back_shiny","Pokemon","match","params","goBack","Type","About","href","target","rel","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96cb5b14.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: \"https://s4ndb4r.herokuapp.com\"\n})\n\nexport default api\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport api from '../../api'\nimport ReactLoading from 'react-loading'\nimport './styles.css'\nimport '../../global.css'\n\nfunction TypeList(){\n  let history = useHistory()\n\n  // NAVEGAÇÃO: VISUALIZAR POKÉMONS FILTRADOS POR TIPO\n  function viewType(type){\n    return history.push(`/type/${type}`)\n  }\n\n  let [types, setTypes] = useState([])\n  let [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n      setLoading(true)\n      let res = await api.get(`/type/`)\n      setTypes(res.data)\n      setLoading(false)\n    }\n    fetchTypes()\n  }, []) // CHAMA useEffect SEM DEPENDÊNCIAS, OU SEJA, NA INICIALIZAÇÃO DO COMPONENTE\n\n  // CARREGA ANIMAÇÃO QUANDO (loading === true)\n  if (loading) {\n    return (<ReactLoading type={\"cylon\"} color={\"#ffd11a\"} height={'20%'} width={'20%'} />)\n  }\n  return (\n    <div className=\"type-list\">\n      <p>Selecione um tipo:</p>\n      {/* ITERA SOBRE ARRAY DE TIPOS E RENDERIZA BOTÃO COM INFORMAÇÕES CORRESPONDENTES */}\n      {types.map(type => {\n        return <button key={type.name} className=\"button\" onClick={() => viewType(type.name)}>{type.name}</button>\n      })}\n    </div>\n  )\n}\n\nexport default TypeList","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport api from '../../api'\nimport ReactLoading from 'react-loading'\n\nimport './styles.css'\nimport '../../global.css'\n\nfunction PokemonGrid(props) {\n  let [pokemons, setPokemons] = useState([])\n  let [loading, setLoading] = useState(false)\n  let history = useHistory()\n\n  // SELECIONA POKÉMONS DE ACORDO COM O TIPO PASSADO COMO PARÂMETRO NA CHAMADA DO COMPONENTE\n  // SE NÃO HOUVER TIPO, SELECIONA TODOS\n  useEffect(() => {\n    const fetchPokemons = async (type) => {\n      setLoading(true)\n      if (!type) {\n        let res = await api.get('/')\n        setPokemons(res.data)\n      } else {\n        let res = await api.get(`/type/${type}`)\n        setPokemons(res.data.kanto_pokemons)\n      }\n      setLoading(false)\n    }\n    fetchPokemons(props.type)\n  }, [props.type]); // DEPENDÊNCIA DO useEffect = props.type; OU SEJA, REPETE A CADA MUDANÇA DESSE VALOR\n\n  // NAVEGAÇÃO: DETALHA INFORMAÇÕES SOBRE O POKÉMON\n  function viewPokemonDetails(id) {\n    return history.push(`/pokemon/${id}`)\n  }\n\n  // CARREGA ANIMAÇÃO QUANDO (loading === true)\n  if (loading) {\n    return (<ReactLoading type={\"cylon\"} color={\"#ffd11a\"} height={'5%'} width={'5%'}/>)\n  }\n  \n  return (\n    <div className=\"pokemon-grid\">\n      <ul>\n        {/* ITERA SOBRE ARRAY DE POKÉMONS E EXIBE O CARD COM INORMAÇÕES CORRESPONDENTES */}\n        {pokemons.map(pokemon => {\n          return (\n              <li key={pokemon.id}>\n                <div>\n                  <p>#{pokemon.id}</p>\n                  <p>{pokemon.name}</p>\n                </div>\n                <div> \n                  <button className=\"button\" onClick={() => viewPokemonDetails(pokemon.id)}>Detalhes</button>\n                  <img alt={pokemon.name} src={pokemon.front}></img>\n                </div>\n              </li>\n          )\n        })}\n    </ul>\n   </div>\n  )\n\n}\n\nexport default PokemonGrid","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport TypeList from '../../components/TypeList'\nimport PokemonGrid from '../../components/PokemonGrid'\n\nimport './styles.css'\nimport '../../global.css'\n\nfunction Home() {\n  let history = useHistory()\n\n  // NAVEGAÇÃO: PÁGINA DE INFORMAÇÕES\n  function viewAbout(){\n    return history.push('/about')\n  }\n\n  return (\n    <div className=\"home-container\">\n      <aside className=\"menu\">\n      <button className=\"button\" onClick={() => viewAbout()}>Sobre</button>\n        {/* RENDERIZA LISTA DE TIPOS */}\n        <TypeList/> \n      </aside>\n      {/* RENDERIZA GRID DE TODOS OS POKEMONS */}\n      <PokemonGrid type={\"\"}/>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport api from '../../api'\nimport ReactLoading from 'react-loading'\n\nfunction PokemonInfoCard(props) {\n  let id = props.id\n\n  let [pokemon, setPokemon] = useState(0) // sendo um único resultado, não inicializa como array\n  let [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      setLoading(true)\n      let res = await api.get(`/pokemon/${id}`)\n      setPokemon(res.data)\n      setLoading(false)\n    }\n    fetchPokemon()\n  }, [id]) // dependencia para chamada = id. chama toda vez que o ID é alterado\n  \n  if (loading) {\n    return (<ReactLoading type={\"spin\"} color={\"#ffd11a\"} height={'5%'} width={'5%'} />)\n  }\n    return (\n      <div className=\"pokemon-info\">\n        <h2>{pokemon.name}</h2>\n        <p>ID: #{pokemon.poke_id}</p>\n        {/*verifica se o objeto já foi buscado na API antes de implantar seu valor no html;\n        o mesmo processo é feito para os sprites*/}\n\n        <p>tipo 1: {(typeof(pokemon.types)=='object' ? pokemon.types[0].name : false)}</p> \n        <p>tipo 2: {(typeof(pokemon.types)=='object' && pokemon.types[1] ? pokemon.types[1].name : \"<nenhum>\")}</p>\n        <p>altura: {pokemon.height}</p>\n        <p>peso: {pokemon.weight}</p>\n        <div className=\"sprite-container\">\n          <div id=\"default\">\n            <p>default</p>\n            <img src={(typeof(pokemon.sprites)=='object' && pokemon.sprites.front ? pokemon.sprites.front : null)} alt=\"front-default\"/>\n            <img src={(typeof(pokemon.sprites)=='object' && pokemon.sprites.back ? pokemon.sprites.back : null)}alt=\"back-default\"/>\n          </div>\n          <div id=\"shiny\">\n            <p>shiny</p>\n            <img src={(typeof(pokemon.sprites)=='object' && pokemon.sprites.front_shiny ? pokemon.sprites.front_shiny : null)} alt=\"front-shiny\"/>\n            <img src={(typeof(pokemon.sprites)=='object' && pokemon.sprites.back_shiny ? pokemon.sprites.back_shiny : null)} alt=\"back-shiny\"/>\n          </div>\n        </div>\n    </div>\n    )\n}\n\nexport default PokemonInfoCard\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport PokemonInfoCard from '../../components/PokemonInfoCard'\nimport './styles.css'\n\nfunction Pokemon(props) {\n  let id = props.match.params.id\n  let history = useHistory()\n    \n  return (\n    <div className=\"pokemon-container\">\n      <div className=\"menu\">\n        <button className=\"button\" onClick={() => history.goBack()}>Voltar</button>\n      </div>\n      <PokemonInfoCard id={id}/>\n    </div>\n  )\n}\n\nexport default Pokemon\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport TypeList from '../../components/TypeList'\nimport PokemonGrid from '../../components/PokemonGrid'\n\nimport './styles.css'\nimport '../../global.css'\n\n\nfunction Type(props) {\n  let type = props.match.params.type\n  let history = useHistory()\n\n  // NAVEGAÇÃO: PÁGINA INICIAL (EXIBE TODOS OS POKÉMONS)\n  function goToRoot(){\n    return history.push('/')\n  }\n\n  return (\n    <div className=\"type-container\">\n      <aside className=\"menu\">\n        <p>Tipo: {type}</p>\n        <button className=\"button\" onClick={() => goToRoot()}>Ver todos</button>\n        {/* RENDERIZA LISTA DE TIPOS */}\n        <TypeList/>\n      </aside>\n      {/* RENDERIZA GRID DE POKÉMONS DO TIPO SELECIONADO */}\n      <PokemonGrid type={type}/>\n    </div>\n  )\n}\n\nexport default Type","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './styles.css'\n\nfunction About() {\n  let history = useHistory()\n\n  return (\n    <div className=\"about-container\">\n        <button className=\"button\" onClick={() => history.goBack()}>Voltar</button>\n      <h3>Pokédex: Gen1</h3>\n      <p>\n        Esta aplicação foi desenvolvida para o Desafio Mercadou em Maio de 2020 usando Node e React.\n        <br/>\n        Decidi mantê-lo online como portfolio.\n      </p>\n      <p>\n        Os repositórios e definição do desafio podem ser encontrados aqui:\n        <br/>\n        <a href=\"https://github.com/sandobits/s4ndb4r/\" target=\"_blank\" rel=\"noopener noreferrer\">API</a> \n        <br/>\n        <a href=\"https://github.com/sandobits/s4ndb4r-react/\" target=\"_blank\" rel=\"noopener noreferrer\">Frontend</a>\n      </p>\n      <p>\n        Desenvolvido por Sanderson Barbosa.\n      </p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Home from './views/Home'\nimport Pokemon from './views/Pokemon'\nimport Type from './views/Type'\nimport About from './views/About'\n\nfunction Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/pokemon/:id\" component={Pokemon}/>\n        <Route path=\"/type/:type\" component={Type}/>\n        <Route path=\"/about\" component={About}/>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Routes\n","import React from 'react';\nimport Routes from './routes'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}